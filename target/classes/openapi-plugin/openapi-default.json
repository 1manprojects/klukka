{
  "openapi": "3.0.3",
  "info": {
    "title": "",
    "version": ""
  },
  "paths": {
    "/api/admin/addNewUser": {
      "post": {
        "tags": [],
        "summary": "Add New User",
        "operationId": "admin addNewUser",
        "parameters": [],
        "requestBody": {
          "description": "User object to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "example": "true"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/admin/data": {
      "get": {
        "tags": [],
        "summary": "Get Admin Data",
        "operationId": "admin getAdminData",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminData"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/admin/deleteUser": {
      "post": {
        "tags": [],
        "summary": "Delete User",
        "operationId": "admin deleteUser",
        "parameters": [],
        "requestBody": {
          "description": "User ID to delete",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "example": "true"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/admin/setPrivacy": {
      "post": {
        "tags": [],
        "summary": "POST Set Privacy HTML",
        "operationId": "admin setPrivacy",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/admin/updateRoles": {
      "post": {
        "tags": [],
        "summary": "Update User Roles",
        "operationId": "admin updateRoles",
        "parameters": [],
        "requestBody": {
          "description": "User object with updated roles",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "example": "true"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/group/addProject": {
      "post": {
        "tags": [],
        "summary": "Add Project to Group",
        "operationId": "group addProject",
        "parameters": [],
        "requestBody": {
          "description": "Project object to add to group",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/group/create": {
      "post": {
        "tags": [],
        "summary": "Create New Group",
        "operationId": "group create",
        "parameters": [],
        "requestBody": {
          "description": "Group object to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/group/data": {
      "post": {
        "tags": [],
        "summary": "Get Group data for Analysis",
        "operationId": "group data for Analysis",
        "parameters": [],
        "requestBody": {
          "description": "Data filter with GroupID set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataFilter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDetails"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/group/delete": {
      "post": {
        "tags": [],
        "summary": "Delete Group",
        "operationId": "group delete",
        "parameters": [],
        "requestBody": {
          "description": "Group ID to delete",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/group/deleteProject": {
      "post": {
        "tags": [],
        "summary": "Delete Project from Group",
        "operationId": "group deleteProject",
        "parameters": [],
        "requestBody": {
          "description": "IdTupel object (groupId, projectId)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdTupel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/group/details": {
      "post": {
        "tags": [],
        "summary": "Get Group Details",
        "operationId": "group getDetails",
        "parameters": [],
        "requestBody": {
          "description": "Group ID",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDetails"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/group/export": {
      "post": {
        "tags": [],
        "summary": "Get Group Tracking Export",
        "operationId": "group data export",
        "parameters": [],
        "requestBody": {
          "description": "Export filter with GroupID set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportFilter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDetails"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/group/inviteUser": {
      "post": {
        "tags": [],
        "summary": "Invite User to Group",
        "operationId": "group inviteUser",
        "parameters": [],
        "requestBody": {
          "description": "GroupToUser object (groupId, mail)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupToUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Invite sent | User does not exist | Error matching user to Group"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/group/leave": {
      "post": {
        "tags": [],
        "summary": "Leave Group",
        "operationId": "group leave",
        "parameters": [],
        "requestBody": {
          "description": "Group ID to leave",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/group/managedGroups": {
      "get": {
        "tags": [],
        "summary": "Get Managed Groups",
        "operationId": "group getManagedGroups",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/group/removeUser": {
      "post": {
        "tags": [],
        "summary": "Remove User from Group",
        "operationId": "group removeUser",
        "parameters": [],
        "requestBody": {
          "description": "GroupToUser object (groupId, mail)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupToUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/group/update": {
      "post": {
        "tags": [],
        "summary": "Update Group",
        "operationId": "group update",
        "parameters": [],
        "requestBody": {
          "description": "Group object to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/info": {
      "get": {
        "tags": [],
        "summary": "Info",
        "operationId": "info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/login": {
      "post": {
        "tags": [],
        "summary": "Login",
        "operationId": "login",
        "parameters": [],
        "requestBody": {
          "description": "Login Object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":true}"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          },
          "406": {
            "description": "NOT_ACCEPTABLE"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/login/check": {
      "post": {
        "tags": [],
        "summary": "Validate Token for Password reset",
        "operationId": "login/check",
        "parameters": [],
        "requestBody": {
          "description": "Password Reset Token String",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "PASSWORD_RESET_TOKEN"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":true}"
              }
            }
          },
          "204": {
            "description": "NO_CONTENT"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":false}"
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/login/reset": {
      "post": {
        "tags": [],
        "summary": "Request Password reset",
        "operationId": "login/reset",
        "parameters": [],
        "requestBody": {
          "description": "Email String",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "user@mail.com"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":true}"
              }
            }
          },
          "204": {
            "description": "NO_CONTENT"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/login/token": {
      "post": {
        "tags": [],
        "summary": "Reset User Password",
        "operationId": "login/token",
        "parameters": [],
        "requestBody": {
          "description": "Password Reset Object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordReset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":true}"
              }
            }
          },
          "404": {
            "description": "NOT_FOUND"
          },
          "406": {
            "description": "NOT_ACCEPTABLE"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/logout": {
      "get": {
        "tags": [],
        "summary": "Logout",
        "operationId": "logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/privacy": {
      "get": {
        "tags": [],
        "summary": "Get Link to Privacy Policy or Html as String",
        "operationId": "privacy",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyInfo"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/refresh": {
      "get": {
        "tags": [],
        "summary": "Refresh token from RefreshToken",
        "operationId": "refresh",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/start": {
      "post": {
        "tags": [],
        "summary": "Start Tracking Project",
        "operationId": "start",
        "parameters": [],
        "requestBody": {
          "description": "Start Object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Start"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":23}"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/activeTracking": {
      "get": {
        "tags": [],
        "summary": "Get Active Tracking",
        "operationId": "user getActiveTracking",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracked"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/addPersonalProject": {
      "post": {
        "tags": [],
        "summary": "Add Personal Project",
        "operationId": "user addPersonalProject",
        "parameters": [],
        "requestBody": {
          "description": "Project object to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":true}"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/archiveProject": {
      "post": {
        "tags": [],
        "summary": "Archive Project",
        "operationId": "user archiveProject",
        "parameters": [],
        "requestBody": {
          "description": "ArchiveId object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":true}"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/archivedProjects": {
      "get": {
        "tags": [],
        "summary": "Get User Archived Projects",
        "operationId": "user getArchivedProjects",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProjects"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/createToken": {
      "post": {
        "tags": [],
        "summary": "Create User Token",
        "operationId": "user createToken",
        "parameters": [],
        "requestBody": {
          "description": "UserApiToken Object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserApiToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":\"Generated-Token\"}"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          },
          "500": {
            "description": "INTERNAL_SERVER_ERROR"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/data": {
      "get": {
        "tags": [],
        "summary": "Get User Data",
        "operationId": "user getData",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserData"
                }
              }
            }
          },
          "204": {
            "description": "NO_CONTENT"
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/dataToAnalyse": {
      "post": {
        "tags": [],
        "summary": "Get Data to Analyse",
        "operationId": "user getDataToAnalyse",
        "parameters": [],
        "requestBody": {
          "description": "DataFilter object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataFilter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisData"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/delete": {
      "get": {
        "tags": [],
        "summary": "Delete User Account",
        "operationId": "user delete",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":23}"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/deleteProject": {
      "post": {
        "tags": [],
        "summary": "Delete User Project",
        "operationId": "user deleteProject",
        "parameters": [],
        "requestBody": {
          "description": "Project ID to delete",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":true}"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/deleteToken": {
      "post": {
        "tags": [],
        "summary": "Delete User Token",
        "operationId": "user deleteToken",
        "parameters": [],
        "requestBody": {
          "description": "Token ID to delete",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":true}"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/deleteTracking": {
      "post": {
        "tags": [],
        "summary": "Delete Tracking Entry",
        "operationId": "user deleteTracking",
        "parameters": [],
        "requestBody": {
          "description": "Tracking ID to delete",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":true}"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/export": {
      "post": {
        "tags": [],
        "summary": "Export User Data",
        "operationId": "user exportData",
        "parameters": [],
        "requestBody": {
          "description": "Export filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportFilter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/csv": {}
            }
          },
          "503": {
            "description": "SERVICE_UNAVAILABLE"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/month": {
      "get": {
        "tags": [],
        "summary": "Get Tracked Minutes This Month",
        "operationId": "user getMonth",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/projects": {
      "get": {
        "tags": [],
        "summary": "Get User Projects",
        "operationId": "user getProjects",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProjects"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/role": {
      "get": {
        "tags": [],
        "summary": "Get User Role",
        "operationId": "user getRole",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/stopTracking": {
      "post": {
        "tags": [],
        "summary": "Stop Tracking",
        "operationId": "user stopTracking",
        "parameters": [],
        "requestBody": {
          "description": "Tracking ID to stop",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":true}"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/tokens": {
      "get": {
        "tags": [],
        "summary": "Get User Tokens",
        "operationId": "user getTokens",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserApiToken"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/updateMail": {
      "post": {
        "tags": [],
        "summary": "Update User Email",
        "operationId": "user updateMail",
        "parameters": [],
        "requestBody": {
          "description": "New email address",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":true}"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/updatePassword": {
      "post": {
        "tags": [],
        "summary": "Update Password",
        "operationId": "user updatePassword",
        "parameters": [],
        "requestBody": {
          "description": "New password",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":true}"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/updateProject": {
      "post": {
        "tags": [],
        "summary": "Update Project",
        "operationId": "user updateProject",
        "parameters": [],
        "requestBody": {
          "description": "Project object to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":true}"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/user/updateTracking": {
      "post": {
        "tags": [],
        "summary": "Update Tracking",
        "operationId": "user updateTracking",
        "parameters": [],
        "requestBody": {
          "description": "Tracked object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tracked"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": "{\"payload\":true}"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/validate": {
      "get": {
        "tags": [],
        "summary": "Validate if cookie is still valid",
        "operationId": "validate",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/version": {
      "get": {
        "tags": [],
        "summary": "Get version ",
        "operationId": "version",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "Group": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "owner": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "owner"
        ]
      },
      "Project": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "refType": {
            "$ref": "#/components/schemas/RefType"
          },
          "archived": {
            "type": "boolean"
          },
          "color": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "ref": {
            "type": "integer",
            "format": "int32"
          },
          "trackedThisMonth": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "archived",
          "id",
          "ref",
          "trackedThisMonth"
        ]
      },
      "Start": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "timeZone": {
            "type": "string"
          },
          "projectID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "projectID"
        ]
      },
      "Tracked": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "start": {
            "$ref": "#/components/schemas/Timestamp"
          },
          "user": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "end": {
            "$ref": "#/components/schemas/Timestamp"
          },
          "timezone": {
            "type": "string"
          }
        },
        "required": [
          "user",
          "projectId",
          "id",
          "active"
        ]
      },
      "User": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mail": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "id"
        ]
      },
      "AdminData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "AnalysisData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "groupProjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "tracked": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tracked"
            }
          }
        }
      },
      "ArchiveId": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "archive": {
            "type": "boolean"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "archive",
          "projectId"
        ]
      },
      "DataFilter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "groupId": {
            "$ref": "#/components/schemas/Optional"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          }
        }
      },
      "DepInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "version": {
            "type": "string"
          },
          "backend": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Deps"
            }
          },
          "frontend": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Deps"
            }
          }
        }
      },
      "Deps": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "version": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ExportFilter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "groupId": {
            "$ref": "#/components/schemas/Optional"
          },
          "filter": {
            "$ref": "#/components/schemas/DataFilter"
          },
          "detailed": {
            "type": "boolean"
          }
        },
        "required": [
          "detailed"
        ]
      },
      "GroupDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          }
        }
      },
      "GroupToUser": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mail": {
            "type": "string"
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "groupId"
        ]
      },
      "IdTupel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id2": {
            "type": "integer",
            "format": "int32"
          },
          "id1": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "id2",
          "id1"
        ]
      },
      "Login": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "password": {
            "type": "string"
          },
          "mail": {
            "type": "string"
          }
        }
      },
      "PasswordReset": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "newPassword": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "PrivacyInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "link": {
            "type": "string"
          },
          "html": {
            "type": "string"
          }
        }
      },
      "Response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "payload": {
            "type": "object"
          }
        }
      },
      "UserApiToken": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string"
          },
          "expiration": {
            "$ref": "#/components/schemas/Optional"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "id"
        ]
      },
      "UserData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserApiToken"
            }
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "UserProjects": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "own": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "group": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          }
        }
      },
      "RefType": {
        "type": "string",
        "enum": [
          "USER",
          "GROUP"
        ]
      },
      "Role": {
        "type": "string",
        "enum": [
          "USER",
          "GROUP",
          "ADMIN",
          "ANALYST"
        ]
      },
      "Timestamp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "time": {
            "type": "integer",
            "format": "int64"
          },
          "nanos": {
            "type": "integer",
            "format": "int32"
          },
          "hours": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "minutes": {
            "type": "integer",
            "format": "int32"
          },
          "seconds": {
            "type": "integer",
            "format": "int32"
          },
          "timezoneOffset": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "time",
          "nanos",
          "hours",
          "date",
          "month",
          "day",
          "minutes",
          "seconds",
          "timezoneOffset",
          "year"
        ]
      },
      "Optional": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "present": {
            "type": "boolean"
          },
          "": {
            "type": "object"
          },
          "empty": {
            "type": "boolean"
          }
        },
        "required": [
          "present",
          "empty"
        ]
      }
    }
  }
}